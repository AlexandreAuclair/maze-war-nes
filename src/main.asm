.INCLUDE "header.asm"

.SEGMENT "ZEROPAGE"

.INCLUDE "registers.inc"

; Game Constant
STARTING_POS= $CF
P1XPOS = $58
P2XPOS = $A0
STATETITLE     = $00  ; displaying title screen
STATEPLAYING   = $01  ; move paddles/ball, check for collisions
STATEGAMEOVER  = $02  ; displaying game over screen

;variable
pointerLo: .res 1   ; pointer variables are declared in RAM
pointerHi:  .res 1   ; low byte first, high byte immediately after
buttons1: .res 1
scrolly: .res 1
direction: .res 1
tempnybble: .res 1
timer: .res 1
backgroundID: .res 1


.SEGMENT "STARTUP"

RESET:
  .INCLUDE "init.asm"

.SEGMENT "CODE"

  LDA #$48
  STA direction

  LDA #$01
  STA backgroundID

  JSR LoadPalette
  JSR LoadDownScreen
  JSR LoadBackground4

  LDA #%10010000
  STA PPU_CTRL
  LDA #%00011110
  STA PPU_MASK

forever:
  JMP forever

NMI:
  LDA #$00
  STA PPU_OAM_ADDR
  LDA #$02
  STA OAM_DMA

  LDA #%10010000
  STA PPU_CTRL
  LDA #%00011110
  STA PPU_MASK
  LDA #$00
  STA PPU_SCROLL
  LDA scrolly
  STA PPU_SCROLL


    ;;;all graphics updates done by PPU here
  JSR ReadController1  ;;get the current button data for player 1

ReadUp:
  LDA buttons1
  AND #$08
  BEQ ReadUpDone
  LDA timer
  CMP #$00
  BNE RD
  LDA direction
  CMP #$18
  BEQ ReadUpDone
  CMP #$82
  BEQ ReadUpDone
  AND #$0F
  STA tempnybble
  CMP #$04
  BEQ ReadUpDone
  CMP #$01
  BEQ ReadUpDone
  CMP #$08
  BEQ coteNord
  LDA direction
  AND #$F0
  ASL A
  ORA tempnybble
  STA direction
  JMP moveback
coteNord:
  LDA direction
  AND #$F0
  LSR A
  ORA tempnybble
  STA direction
moveforward:
   JSR LoadBackgroundIndex
   LDA #$30
   STA timer
RD:JMP ReadDone
ReadUpDone:

ReadDown:
  LDA buttons1
  AND #$04
  BEQ ReadDownDone
  LDA timer
  CMP #$00
  BNE RD2
  LDA direction
  CMP #$12
  BEQ ReadDownDone
  CMP #$88
  BEQ ReadDownDone
  AND #$0F
  STA tempnybble
  CMP #$04
  BEQ ReadDownDone
  CMP #$01
  BEQ ReadDownDone
  CMP #$02
  BEQ coteSud
  LDA direction
  AND #$F0
  ASL A
  ORA tempnybble
  STA direction
  JMP moveback
coteSud:
  LDA direction
  AND #$F0
  LSR A
  ORA tempnybble
  STA direction
moveback:
    JSR LoadBackgroundIndex
    LDA #$30
    STA timer
RD2:JMP ReadDone
ReadDownDone:

ReadLeft:
  LDA buttons1
  AND #$02
  BEQ ReadLeftDone
  LDA timer
  CMP #$00
  BNE ReadDone
  LDA direction
  AND #$F0
  STA tempnybble
  LDA direction
  AND #$0F
  CMP #$08
  BCS leNordShift
  ASL A
  ORA tempnybble
  STA direction
  JMP doneShiftLeft
leNordShift:
  LDA #$01
  ORA tempnybble
  STA direction
doneShiftLeft:
  ;LDA #$E0
  ;STA scrolly
  JSR LoadBackgroundIndex
  LDA #$30
  STA timer
  JMP ReadDone
ReadLeftDone:

ReadRight:
  LDA buttons1
  AND #$01
  BEQ ReadRightDone
  LDA timer
  CMP #$00
  BNE ReadDone
  LDA direction
  AND #$F0
  STA tempnybble
  LDA direction
  AND #$0F
  CMP #$02
  BCC leSudShift
  LSR A
  ORA tempnybble
  STA direction
  JMP doneShiftRight
leSudShift:
  LDA #$08
  ORA tempnybble
  STA direction
doneShiftRight:
  ;LDA #$E0
  ;STA scrolly
  JSR LoadBackgroundIndex
  LDA #$30
  STA timer
  JMP ReadDone
ReadRightDone:

ReadDone:
  JSR decreasetimer





  RTI


VBlankWait:
  BIT PPU_STATUS
  BPL VBlankWait
  RTS

break:
  LDA #$00
  STA scrolly
  RTS

decreasetimer:
  LDX timer
  BEQ ExitTimer
  DEX
  STX timer
ExitTimer:
  RTS

LoadPalette:
  LDA #$3F
  STA PPU_ADDRESS
  LDA #$00
  STA PPU_ADDRESS
  LDX #$00
LoadPaletteLoop:
  LDA paletteData,x
  STA PPU_DATA
  INX
  CPX #$20
  BNE LoadPaletteLoop
  RTS

LoadMechant:
  LDX #$00              ; start at 0
LoadmechantLoop:
  LDA killer, x        
  STA SPRITE_ADDR, x
  INX                   ; X = X + 1
  CPX #$90
  BNE LoadmechantLoop
  RTS

ReadController1:
  LDA #$01
  STA JOY1
  LDA #$00
  STA JOY1
  LDX #$08
ReadController1Loop:
  LDA JOY1
  LSR A
  ROL buttons1
  DEX
  BNE ReadController1Loop
  RTS

LoadBackgroundIndex:
  LDA direction
  AND #$0F
  CMP #$04
  BEQ cote
  CMP #$01
  BEQ cote

  LDA direction
  CMP #$88
  BEQ fond
  CMP #$12
  BEQ fond
  CMP #$48
  BEQ fondu
  CMP #$22
  BEQ fondu
  CMP #$28
  BEQ proche
  CMP #$42
  BEQ proche
  CMP #$18
  BEQ Devant
  CMP #$82
  BEQ Devant
  
cote:
  LDA #$00
  STA PPU_MASK
  JSR VBlankWait
  JSR LoadBackgroundCote
  JSR break
  RTS
fond:
  LDA #$00
  STA PPU_MASK
  JSR VBlankWait
  JSR LoadBackground4
  JSR break
  RTS
fondu:
  LDA #$00
  STA PPU_MASK
  JSR VBlankWait
  JSR LoadBackground3
  JSR break
  RTS
proche:
  LDA #$00
  STA PPU_MASK
  JSR VBlankWait
  JSR LoadBackground2
  JSR break
  RTS
Devant:
  LDA #$00
  STA PPU_MASK
  JSR VBlankWait
  JSR LoadBackground1
  JSR break
  RTS


LoadBackground1:
  LDA PPU_STATUS        ; read PPU status to reset the high/low latch
  LDA #$20
  STA PPU_ADDRESS       ; write the high byte of $2000 address
  LDA #$00
  STA PPU_ADDRESS       ; write the low byte of $2000 address

  LDA backgroundAddrLo1
  STA pointerLo         ; put the low byte of the address of background into pointer
  LDA backgroundAddrHi1
  STA pointerHi         ; put the high byte of the address into pointer
  
  LDX #$00              ; start at pointer + 0
  LDY #$00
OutsideLoop:
  
InsideLoop:
  LDA (pointerLo), y  ; copy one background byte from address in pointer plus Y
  STA PPU_DATA        ; this runs 256 * 4 times
  
  INY                 ; inside loop counter
  CPY #$00
  BNE InsideLoop      ; run the inside loop 256 times before continuing down
  
  INC pointerHi       ; low byte went 0 to 256, so high byte needs to be changed now
  
  INX
  CPX #$04
  BNE OutsideLoop     ; run the outside loop 256 times before continuing down
  RTS

LoadBackground2:
  LDA PPU_STATUS        ; read PPU status to reset the high/low latch
  LDA #$20
  STA PPU_ADDRESS       ; write the high byte of $2000 address
  LDA #$00
  STA PPU_ADDRESS       ; write the low byte of $2000 address

  LDA backgroundAddrLo2
  STA pointerLo         ; put the low byte of the address of background into pointer
  LDA backgroundAddrHi2
  STA pointerHi         ; put the high byte of the address into pointer
  
  LDX #$00              ; start at pointer + 0
  LDY #$00
OutsideLoop2:
  
InsideLoop2:
  LDA (pointerLo), y  ; copy one background byte from address in pointer plus Y
  STA PPU_DATA        ; this runs 256 * 4 times
  
  INY                 ; inside loop counter
  CPY #$00
  BNE InsideLoop2      ; run the inside loop 256 times before continuing down
  
  INC pointerHi       ; low byte went 0 to 256, so high byte needs to be changed now
  
  INX
  CPX #$04
  BNE OutsideLoop2     ; run the outside loop 256 times before continuing down
  RTS

LoadBackground3:
  LDA PPU_STATUS        ; read PPU status to reset the high/low latch
  LDA #$20
  STA PPU_ADDRESS       ; write the high byte of $2000 address
  LDA #$00
  STA PPU_ADDRESS       ; write the low byte of $2000 address

  LDA backgroundAddrLo3
  STA pointerLo         ; put the low byte of the address of background into pointer
  LDA backgroundAddrHi3
  STA pointerHi         ; put the high byte of the address into pointer
  
  LDX #$00              ; start at pointer + 0
  LDY #$00
OutsideLoop3:
  
InsideLoop3:
  LDA (pointerLo), y  ; copy one background byte from address in pointer plus Y
  STA PPU_DATA        ; this runs 256 * 4 times
  
  INY                 ; inside loop counter
  CPY #$00
  BNE InsideLoop3      ; run the inside loop 256 times before continuing down
  
  INC pointerHi       ; low byte went 0 to 256, so high byte needs to be changed now
  
  INX
  CPX #$04
  BNE OutsideLoop3     ; run the outside loop 256 times before continuing down
  RTS

LoadBackground4:
  LDA PPU_STATUS        ; read PPU status to reset the high/low latch
  LDA #$20
  STA PPU_ADDRESS       ; write the high byte of $2000 address
  LDA #$00
  STA PPU_ADDRESS       ; write the low byte of $2000 address

  LDA backgroundAddrLo4
  STA pointerLo         ; put the low byte of the address of background into pointer
  LDA backgroundAddrHi4
  STA pointerHi         ; put the high byte of the address into pointer
  
  LDX #$00              ; start at pointer + 0
  LDY #$00
OutsideLoop4:
  
InsideLoop4:
  LDA (pointerLo), y  ; copy one background byte from address in pointer plus Y
  STA PPU_DATA        ; this runs 256 * 4 times
  
  INY                 ; inside loop counter
  CPY #$00
  BNE InsideLoop4      ; run the inside loop 256 times before continuing down
  
  INC pointerHi       ; low byte went 0 to 256, so high byte needs to be changed now
  
  INX
  CPX #$04
  BNE OutsideLoop4     ; run the outside loop 256 times before continuing down
  RTS

LoadBackgroundCote:
  LDA PPU_STATUS        ; read PPU status to reset the high/low latch
  LDA #$20
  STA PPU_ADDRESS       ; write the high byte of $2000 address
  LDA #$00
  STA PPU_ADDRESS       ; write the low byte of $2000 address

  LDA backgroundAddrLoCote
  STA pointerLo         ; put the low byte of the address of background into pointer
  LDA backgroundAddrHiCote
  STA pointerHi         ; put the high byte of the address into pointer
  
  LDX #$00              ; start at pointer + 0
  LDY #$00
OutsideLoopCote:
  
InsideLoopCote:
  LDA (pointerLo), y  ; copy one background byte from address in pointer plus Y
  STA PPU_DATA        ; this runs 256 * 4 times
  
  INY                 ; inside loop counter
  CPY #$00
  BNE InsideLoopCote      ; run the inside loop 256 times before continuing down
  
  INC pointerHi       ; low byte went 0 to 256, so high byte needs to be changed now
  
  INX
  CPX #$04
  BNE OutsideLoopCote     ; run the outside loop 256 times before continuing down
  RTS

LoadDownScreen:
  LDA PPU_STATUS        ; read PPU status to reset the high/low latch
  LDA #$28
  STA PPU_ADDRESS       ; write the high byte of $2000 address
  LDA #$00
  STA PPU_ADDRESS       ; write the low byte of $2000 address

  LDA downScreenAddrLo
  STA pointerLo         ; put the low byte of the address of background into pointer
  LDA downScreenAddrHi
  STA pointerHi         ; put the high byte of the address into pointer
  
  LDX #$00              ; start at pointer + 0
  LDY #$00
OutsideLoopF:
  
InsideLoopF:
  LDA (pointerLo), y  ; copy one background byte from address in pointer plus Y
  STA PPU_DATA        ; this runs 256 * 4 times
  
  INY                 ; inside loop counter
  CPY #$00
  BNE InsideLoopF     ; run the inside loop 256 times before continuing down
  
  INC pointerHi       ; low byte went 0 to 256, so high byte needs to be changed now
  
  INX
  CPX #$04
  BNE OutsideLoopF    ; run the outside loop 256 times before continuing down
  RTS

backgroundAddrLo1:
  .BYTE <background1
backgroundAddrHi1:
  .BYTE >background1

backgroundAddrLo2:
  .BYTE <background2
backgroundAddrHi2:
  .BYTE >background2

backgroundAddrLo3:
  .BYTE <background3
backgroundAddrHi3:
  .BYTE >background3

backgroundAddrLo4:
  .BYTE <background4
backgroundAddrHi4:
  .BYTE >background4

backgroundAddrLoCote:
  .BYTE <backgroundCote
backgroundAddrHiCote:
  .BYTE >backgroundCote

downScreenAddrLo:
  .BYTE <downScreen
downScreenAddrHi:
  .BYTE >downScreen

background3:
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 1
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 2
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 3
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 4
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 5
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 6
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 7
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $63,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 8
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$5E

  .BYTE $62,$64,$63,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 9
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$5E,$60,$5F

  .BYTE $24,$24,$62,$64,$63,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 10
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$5E,$60,$5F,$24,$24

  .BYTE $24,$24,$24,$24,$62,$64,$63,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 11
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$5E,$60,$5F,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$62,$64, $63,$24,$24,$24,$24,$24,$24,$24  ;;row 12
  .BYTE $24,$24,$24,$24,$24,$24,$24,$5E, $60,$5F,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $62,$64,$63,$24,$24,$24,$24,$24  ;;row 13
  .BYTE $24,$24,$24,$24,$24,$5E,$60,$5F, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$62,$64,$63,$24,$24,$24  ;;row 14
  .BYTE $24,$24,$24,$5E,$60,$5F,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$62,$61,$40,$40  ;;row 15
  .BYTE $40,$40,$55,$5F,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$3B,$24,$24  ;;row 16
  .BYTE $24,$24,$3A,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$3B,$24,$24  ;;row 17
  .BYTE $24,$24,$3A,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$5E,$5D,$50,$50  ;;row 18
  .BYTE $50,$50,$59,$63,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$5E,$60,$5F,$24,$24,$24  ;;row 19
  .BYTE $24,$24,$24,$62,$64,$63,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $5E,$60,$5F,$24,$24,$24,$24,$24  ;;row 20
  .BYTE $24,$24,$24,$24,$24,$62,$64,$63, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$5E,$60, $5F,$24,$24,$24,$24,$24,$24,$24  ;;row 21
  .BYTE $24,$24,$24,$24,$24,$24,$24,$62, $64,$63,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$5E,$60,$5F,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 22
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$62,$64,$63,$24,$24,$24,$24

  .BYTE $24,$24,$5E,$60,$5F,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 23
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$62,$64,$63,$24,$24

  .BYTE $5E,$60,$5F,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 24
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$62,$64,$63

  .BYTE $5F,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 25
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$62

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 26
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 27
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 28
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 29
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 30
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

attribute3:
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

background2:
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 1
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 2
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 3
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $37,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 4
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$38

  .BYTE $24,$37,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 5
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$38,$24

  .BYTE $24,$24,$37,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 6
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$38,$24,$24

  .BYTE $24,$24,$24,$37,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 7
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$38,$24,$24,$24

  .BYTE $24,$24,$24,$24,$37,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 8
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$38,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$37,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 9
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$38,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$37,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 10
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$38,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3C, $40,$40,$40,$40,$40,$40,$40,$40  ;;row 11
  .BYTE $40,$40,$40,$40,$40,$40,$40,$40, $3D,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 12
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 13
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 14
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 15
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 16
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 17
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 18
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 19
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 20
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$3B, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 21
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $3A,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$39, $50,$50,$50,$50,$50,$50,$50,$50  ;;row 22
  .BYTE $50,$50,$50,$50,$50,$50,$50,$50, $36,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$38,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 23
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$37,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$38,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 24
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$37,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$38,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 25
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$37,$24,$24,$24,$24

  .BYTE $24,$24,$24,$38,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 26
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$37,$24,$24,$24

  .BYTE $24,$24,$38,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 27
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$37,$24,$24

  .BYTE $24,$38,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 28
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$37,$24

  .BYTE $38,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 29
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$37

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 30
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

attribute2:
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

background1:
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 1
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $47,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 2
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$68

  .BYTE $48,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 3
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$67

  .BYTE $24,$65,$3E,$3E,$3E,$3E,$3E,$3E, $3E,$3E,$3E,$3E,$3E,$3E,$3E,$3E  ;;row 4
  .BYTE $3E,$3E,$3E,$3E,$3E,$3E,$3E,$3E, $3E,$3E,$3E,$3E,$3E,$3E,$2C,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 5
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 6
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 7
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 8
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 9
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 10
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 11
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 12
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 13
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 14
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 15
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24 ;;row 16
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 17
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 18
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 19
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 20
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 21
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 22
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 23
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 24
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 25
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$33,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 26
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$2D,$24

  .BYTE $24,$66,$3F,$3F,$3F,$3F,$3F,$3F, $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F  ;;row 27
  .BYTE $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F, $3F,$3F,$3F,$3F,$3F,$3F,$2E,$24

  .BYTE $68,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 28
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$47

  .BYTE $67,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 29
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$48

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 30
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

attribute:
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

background4:
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 1
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 2
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 3
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 4
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 5
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 6
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 7
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 8
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 9
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 10
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $6C,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 11
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$69

  .BYTE $46,$44,$6B,$6C,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 12
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$69,$6A,$42,$45

  .BYTE $24,$24,$24,$46,$44,$6B,$6C,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 13
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$69,$6A,$42,$45,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$46,$44, $6B,$6C,$24,$24,$24,$24,$24,$24  ;;row 14
  .BYTE $24,$24,$24,$24,$24,$24,$69,$6A, $42,$45,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$46,$44,$6B,$6C,$24,$24,$24  ;;row 15
  .BYTE $24,$24,$24,$69,$6A,$42,$45,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$46,$44,$43,$6D  ;;row 16
  .BYTE $6D,$41,$42,$45,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$6F,$24  ;;row 17
  .BYTE $24,$70,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$79,$7A,$71,$6E  ;;row 18
  .BYTE $6E,$72,$73,$74,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$79,$7A,$77,$78,$24,$24,$24  ;;row 19
  .BYTE $24,$24,$24,$75,$76,$73,$74,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$79,$7A, $77,$78,$24,$24,$24,$24,$24,$24  ;;row 20
  .BYTE $24,$24,$24,$24,$24,$24,$75,$76, $73,$74,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$79,$7A,$77,$78,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 21
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$75,$76,$73,$74,$24,$24,$24

  .BYTE $79,$7A,$77,$78,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 22
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$75,$76,$73,$74

  .BYTE $78,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 23
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$75

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 24
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 25
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 26
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 27
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 28
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 29
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 30
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

attribute4:
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000  

backgroundCote:
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 1
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $3E,$3E,$3E,$3E,$3E,$3E,$3E,$3E, $3E,$3E,$3E,$3E,$3E,$3E,$3E,$3E  ;;row 2
  .BYTE $3E,$3E,$3E,$3E,$3E,$3E,$3E,$3E, $3E,$3E,$3E,$3E,$3E,$3E,$3E,$3E

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 3
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 4
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 5
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 6
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 7
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 8
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 9
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 10
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 11
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 12
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 13
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 14
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 15
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 16
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 17
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 18
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 19
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 20
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 21
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 22
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 23
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 24
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 25
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 26
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 27
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 28
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F, $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F  ;;row 29
  .BYTE $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F, $3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 30
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

attributeWest_East:
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

downScreen:
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 1
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 2
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 3
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 4
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 5
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 6
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 7
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 8
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 9
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 10
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 11
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 12
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 13
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 14
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 15
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 16
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 17
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 18
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 19
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 20
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 21
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 22
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 23
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 24
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 25
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 26
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 27
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 28
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 29
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24  ;;row 30
  .BYTE $24,$24,$24,$24,$24,$24,$24,$24, $24,$24,$24,$24,$24,$24,$24,$24

attributeDownScreen:
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
  .BYTE %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

killer:
  .BYTE $70,$00,$01,$68, $70,$01,$01,$70, $70,$02,$01,$78, $70,$03,$01,$80, $70,$04,$01,$88, $70,$05,$01,$90
  .BYTE $78,$06,$01,$68, $78,$07,$01,$70, $78,$08,$01,$78, $78,$09,$01,$80, $78,$0A,$01,$88, $78,$0B,$01,$90
  .BYTE $80,$0C,$01,$68, $80,$0D,$01,$70, $80,$0E,$01,$78, $80,$0F,$01,$80, $80,$10,$01,$88, $80,$11,$01,$90
  .BYTE $88,$12,$01,$68, $88,$13,$01,$70, $88,$14,$01,$78, $88,$15,$01,$80, $88,$16,$01,$88, $88,$17,$01,$90
  .BYTE $90,$18,$01,$68, $90,$19,$01,$70, $90,$1A,$01,$78, $90,$1B,$01,$80, $90,$1C,$01,$88, $90,$1D,$01,$90
  .BYTE $98,$1E,$01,$68, $98,$1F,$01,$70, $98,$20,$01,$78, $98,$21,$01,$80, $98,$22,$01,$88, $98,$23,$01,$90

paletteData:
  .BYTE $0F,$2A,$10,$30,  $3D,$1D,$00,$30,  $36,$26,$16,$06,  $3A,$2A,$1A,$0A   ;;background palette
  .BYTE $0F,$2A,$10,$30,  $3D,$1D,$00,$30,  $36,$26,$16,$06,  $3A,$2A,$1A,$0A   ;;sprite palette

.SEGMENT "CHARS"
  .incbin "mazewar.chr"